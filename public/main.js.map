{"version":3,"sources":["./src/environments/environment.ts","./src/app/hs-json.service.ts","./src/app/blizz-api.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/art-display/art-display.component.ts","./src/app/art-display/art-display.component.html","./src/app/authorization.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {Art, Card} from './interfaces';\nimport {EMPTY, Observable} from 'rxjs';\nimport {HttpClient, HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {JsonObject} from '@angular/compiler-cli/ngcc/src/packages/entry_point';\nimport {catchError} from 'rxjs/operators';\nimport HearthstoneJSON from 'hearthstonejson-client';\nimport {fromPromise} from 'rxjs/internal-compatibility';\n\n@Injectable({\n   providedIn: 'root'\n})\nexport class HsJsonService {\n   hsjson: HearthstoneJSON;\n\n   constructor(\n      private http: HttpClient\n   ) {\n      this.hsjson = new HearthstoneJSON();\n   }\n\n   getAllCards(): Observable<any> {\n      return fromPromise(this.hsjson.get(58213));\n   }\n\n   getArt(id: string): Observable<any> {\n      const headers = new HttpHeaders({\n         contentType: 'image/png'\n      });\n\n      const options = {responseType: 'text', headers};\n\n      // @ts-ignore\n      return this.http.get<any>('https://cors-anywhere.herokuapp.com/https://art.hearthstonejson.com/v1/orig/EX1_001.png', options);\n   }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport {Card, CardsResponse} from './interfaces';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n   providedIn: 'root'\n})\nexport class BlizzApiService {\n\n   constructor(\n      private http: HttpClient\n   ) { }\n\n   getCards(): Observable<any> {\n      return this.http.get('/blizzAPI/hearthstone/cards');\n   }\n\n   getCard(id: number): Observable<Card> {\n      return this.http.get<CardsResponse>(`/blizzAPI/hearthstone/cards?id=${id}`).pipe(\n         map(cardsResponse => {\n            if (cardsResponse.cardCount === 0) {\n               console.error(`No such card: id ${id}`);\n            } else {\n               return cardsResponse.cards[0];\n            }\n         })\n      );\n   }\n\n   getMetaData(): Observable<any> {\n      return this.http.get('/blizzAPI/hearthstone/metadata');\n   }\n}\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthorizationService} from './authorization.service';\r\nimport {BlizzApiService} from './blizz-api.service';\r\nimport {HsJsonService} from './hs-json.service';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Card} from './interfaces';\r\n\r\n@Component({\r\n   selector: 'app-root',\r\n   templateUrl: './app.component.html',\r\n   styleUrls: ['./app.component.sass']\r\n})\r\nexport class AppComponent implements OnInit {\r\n   title = 'HSAPI';\r\n   cards: Card[];\r\n   displayCard: Card;\r\n\r\n   constructor(\r\n      private authService: AuthorizationService,\r\n      private blizzAPI: BlizzApiService,\r\n      private hsJsonService: HsJsonService,\r\n   ) {}\r\n\r\n   ngOnInit(): void {\r\n\r\n      this.hsJsonService.getAllCards().subscribe(cards => {\r\n         this.cards = cards;\r\n         console.log('this.cards: ', this.cards);\r\n\r\n         this.displayCard = this.getRandomCard();\r\n      });\r\n   }\r\n\r\n   getRandomCard(): Card {\r\n      const cardsWithArt = this.cards.filter(card => card.artist);\r\n      return cardsWithArt[Math.floor(Math.random() * cardsWithArt.length)];\r\n   }\r\n\r\n   refreshCard(): void {\r\n      this.displayCard = this.getRandomCard();\r\n   }\r\n}\r\n","<main>\n   <section>\n      <app-art-display (click)=\"refreshCard()\" [card]=\"displayCard\" *ngIf=\"displayCard\"></app-art-display>\n   </section>\n</main>\n\n<footer>\n\n</footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {AuthorizationService} from './authorization.service';\nimport {HsJsonService} from './hs-json.service';\nimport { ArtDisplayComponent } from './art-display/art-display.component';\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      ArtDisplayComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule\n   ],\n   providers: [\n      {\n         provide: HTTP_INTERCEPTORS,\n         useClass: AuthorizationService,\n         multi: true\n      }\n   ],\n   bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {Card} from '../interfaces';\n\n@Component({\n   selector: 'app-art-display',\n   templateUrl: './art-display.component.html',\n   styleUrls: ['./art-display.component.sass', './loader.sass']\n})\nexport class ArtDisplayComponent implements OnInit, OnChanges {\n   @Input() card: Card;\n\n   isImgLoaded: boolean;\n\n   constructor() { }\n\n   ngOnInit(): void {\n\n   }\n\n   ngOnChanges(changes: SimpleChanges): void {\n      if (changes.card) {\n         this.isImgLoaded = false;\n         console.log('FALSE');\n      }\n   }\n\n   imgOnload(): void {\n      this.isImgLoaded = true;\n      console.log('TRUE');\n   }\n\n}\n","<div class=\"card-container\">\n   <div class=\"card-name\">{{card.name}}</div>\n\n   <div class=\"card-art-container\">\n      <img\n         class=\"card-art\"\n         src=\"https://art.hearthstonejson.com/v1/orig/{{card.id}}.png\"\n         alt=\"\"\n         (load)=\"imgOnload()\"\n         [class.not-loaded]=\"!isImgLoaded\"\n      >\n      <div class=\"loading-overlay\" [class.loading]=\"!isImgLoaded\">\n         <div class=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n      </div>\n   </div>\n\n   <div class=\"card-flavor\" *ngIf=\"card.flavor\">\"{{card.flavor}}\"</div>\n   <div class=\"card-artist\">Artist: {{card.artist}}</div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n   HttpClient,\n   HttpEvent,\n   HttpHandler,\n   HttpHeaders,\n   HttpInterceptor,\n   HttpParams,\n   HttpRequest,\n   HttpResponse\n} from '@angular/common/http';\nimport {EMPTY, Observable} from 'rxjs';\nimport {TokenResponse} from './interfaces';\nimport {map, mergeMap, switchMap, tap} from 'rxjs/operators';\n\n@Injectable({\n   providedIn: 'root'\n})\nexport class AuthorizationService implements HttpInterceptor {\n\n   region: 'eu';\n\n   constructor(\n      private http: HttpClient\n   ) {\n      this.region = 'eu';\n   }\n\n   token: string;\n\n\n   intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n      if (req.url.includes('/oauth/token')) {\n         return next.handle(req);\n      }\n\n      if (req.url.startsWith('/blizzAPI')) {\n         let newReq = req.clone({\n            url: req.url.replace('/blizzAPI', `https://${this.region}.api.blizzard.com`)\n         });\n\n         if (this.token) {\n            newReq = newReq.clone({\n               setHeaders: {\n                  Authorization: `Bearer ${this.token}`\n               }\n            });\n\n            return next.handle(newReq);\n         } else {\n            return this.getToken().pipe(\n               switchMap((r) => {\n                  if (r.access_token) {\n                     this.token = r.access_token;\n                     newReq = newReq.clone({\n                        headers: newReq.headers.append('Authorization', `Bearer ${this.token}`)\n                     });\n                     return next.handle(newReq);\n                  } else {\n                     console.error('Cannot retrieve token');\n                     return EMPTY;\n                  }\n               })\n            );\n         }\n      } else {\n         return next.handle(req);\n      }\n\n   }\n\n   getToken(): Observable<TokenResponse> {\n      const headers = new HttpHeaders({\n         Authorization: 'Basic ' + btoa('ebba5d4e44004b23b4f120f07f59cfba:OF3IvChTSXfGRhwDrnQsVm8bFFCsGxm8')\n      });\n\n      const params = new HttpParams().set('grant_type', 'client_credentials');\n\n      console.log('params: ', params);\n\n      return this.http.post<TokenResponse>(\n         'https://us.battle.net/oauth/token',\n         {},\n         {headers, params}\n      );\n   }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}